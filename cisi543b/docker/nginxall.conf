
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;


    ##HARDENING START
    ##add_header X-Frame-Options "SAMEORIGIN";
    ##CHANGING ABOVE - 071819
    ##https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "DENY";
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    server_tokens       off;

    ##NEW - 041519
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header X-Content-Type-Options nosniff;

    ssl_session_tickets off;

    ##OLD, PROTECT AGAINST BUFFER OVERFLOW?? BELOW LOOKS BETTER
    ##buffer policy
    client_body_buffer_size 5K;
    client_header_buffer_size 5k;
    client_max_body_size 1k;
    large_client_header_buffers 2 5k;
    ##end buffer policy


    #gzip  on;

    # include /etc/nginx/conf.d/*.conf;

    # default.conf
    # This is a template. Referenced variables (e.g. /var/www/brail347a22) need 
    # to be rewritten with real values in order for this file to work. 

    upstream rails_app {
    server prodweb:3010;
    }

    server {
        # define your domain
        server_name www.example.com;

        # define the public application root
        root   /app/public;
        index  index.html;

        # define where Nginx should write its logs
        access_log myapp__nginx.access.log;
        error_log myapp__nginx.error.log;

        # deny requests for files that should never be accessed
        location ~ /\. {
            deny all;
        }

        location ~* ^.+\.(rb|log)$ {
            deny all;
        }

        # serve static (compiled) assets directly if they exist (for rails production)
        location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
            try_files $uri @rails;

            access_log off;
            gzip_static on; # to serve pre-gzipped version

            expires max;
            add_header Cache-Control public;

            # Some browsers still send conditional-GET requests if there's a
            # Last-Modified header or an ETag header even if they haven't
            # reached the expiry date sent in the Expires header.
            add_header Last-Modified "";
            add_header ETag "";
            break;
        }

        # send non-static file requests to the app server
        location / {
            try_files $uri @rails;
        }

        location @rails {
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://rails_app;
        }
    }

}

